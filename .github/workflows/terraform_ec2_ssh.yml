name: 'Terraform_ec2_ssh'

on:
  workflow_dispatch:
permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3
    - name: check terraform version
      run: terraform -v
    - name: Terraform Init
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: terraform init
      
    - name: Terraform Plan done
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: terraform plan -input=false
      
    - name: Terraform apply
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY  }}
      run: terraform apply -auto-approve -input=false
      
    - name: Checking Files present on the server
      run: |
        echo "Current directory path:"
        pwd
        echo "Listing files in current directory:"
        ls -ltr
        echo "content of ip.txt"
        cat "/home/runner/work/ec2_terraform_ssh/ec2_terraform_ssh/ip.txt"
        echo "/n/n/n"
        echo " capturing terraform output variable:"
        hostip_address="$(terraform output -raw ip_address)"
        echo $hostip_address
        
    - name: setup ec2 instance
      run: |
          mkdir -p ~/.ssh/
          SSH_HOST="$(terraform output -raw ip_address)"
          echo "SSH_HOST : " $SSH_HOST
          echo "$SSH_KEY" > ~/.ssh/staging.key
          chmod 600 ~/.ssh/staging.key
          cat >>~/.ssh/config <<END
          Host staging
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/staging.key
            StrictHostKeyChecking no
          END
      env:
          SSH_USER: ${{ secrets.USER_NAME }}
          SSH_KEY: ${{ secrets.PRIVATE_KEY }}
    - name: login the server
      run: |
          ssh staging  '
          
            #Now we have got the access of EC2 and we will start the deploy .
            touch myfile_terraform.txt
            echo "This is third line added" >> myfile.txt  
          '
